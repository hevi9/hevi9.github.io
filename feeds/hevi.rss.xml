<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Notes</title><link>/</link><description></description><atom:link href="/feeds/hevi.rss.xml" rel="self"></atom:link><lastBuildDate>Fri, 31 Oct 2014 00:00:00 +0100</lastBuildDate><item><title>Pelican usage notes</title><link>/pelican-usage-notes.html</link><description>&lt;div class="section" id="setup-notes"&gt;
&lt;h2&gt;Setup notes&lt;/h2&gt;
&lt;p&gt;Initialize files:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
&amp;gt; mv .project .project-no
&amp;gt; pelican-quickstart
&amp;gt; mv .project-no .project
&lt;/pre&gt;
&lt;p&gt;Move eclipse project file away, pelican-quickstart confuses with it
and back after pelican-quickstart.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="run-notes"&gt;
&lt;h2&gt;Run notes&lt;/h2&gt;
&lt;p&gt;First terminal:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
&amp;gt; cd ~/wrk/blog
&amp;gt; make serve
&lt;/pre&gt;
&lt;p&gt;and open browser to &lt;a class="reference external" href="http://localhost:8000"&gt;http://localhost:8000&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Second terminal:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
&amp;gt; cd ~/wrk/blog
&amp;gt; pelican -r
&lt;/pre&gt;
&lt;p&gt;This run until there rst syntax error, then restart pelican -r on rst errors.&lt;/p&gt;
&lt;p&gt;make devserver does not practically work, because pelican process terminates on
rst text errors. pelican .r does not work either. develop_server.sh also messes
up with pid-file.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="beam-up-to-github-pages"&gt;
&lt;h2&gt;Beam up to github pages&lt;/h2&gt;
&lt;p&gt;Install ghp-import:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
&amp;gt; pip3 install ghp-import
&lt;/pre&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Hevi</dc:creator><pubDate>Fri, 31 Oct 2014 00:00:00 +0100</pubDate><guid>tag:,2014-10-31:pelican-usage-notes.html</guid><category>setup</category></item><item><title>Creating user github pages</title><link>/creating-user-github-pages.html</link><description>&lt;p&gt;According the instructions in &lt;a class="reference external" href="https://help.github.com/categories/20/articles"&gt;https://help.github.com/categories/20/articles&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Creating user github pages. Project pages has a bit more complex procedure.&lt;/p&gt;
&lt;p&gt;Not using jekyll.&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Create repository in github&lt;/li&gt;
&lt;/ol&gt;
&lt;img alt="" src="creating-github-pages-01.png" /&gt;
&lt;ol class="arabic simple" start="2"&gt;
&lt;li&gt;Clone the repository to local computer&lt;/li&gt;
&lt;/ol&gt;
&lt;img alt="" src="creating-github-pages-02.png" /&gt;
&lt;ol class="arabic simple" start="3"&gt;
&lt;li&gt;Create test index.html file, commit and push to github&lt;/li&gt;
&lt;/ol&gt;
&lt;img alt="" src="creating-github-pages-03.png" /&gt;
&lt;ol class="arabic simple" start="4"&gt;
&lt;li&gt;Check results&lt;/li&gt;
&lt;/ol&gt;
&lt;img alt="" src="creating-github-pages-04.png" /&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Hevi</dc:creator><pubDate>Mon, 22 Apr 2013 00:00:00 +0200</pubDate><guid>tag:,2013-04-22:creating-user-github-pages.html</guid><category>blog</category></item><item><title>Pulling with Egit</title><link>/pulling-with-egit.html</link><description>&lt;p&gt;Pulling from remote repository with Egit does not
always work right.&lt;/p&gt;
&lt;p&gt;&amp;lt;project&amp;gt; -&amp;gt; Team -&amp;gt; Pull might give this:&lt;/p&gt;
&lt;img alt="" src="egit-pull-error.png" /&gt;
&lt;p&gt;which is incorrect information.&lt;/p&gt;
&lt;p&gt;Workaround is to revert command line git (as usual):&lt;/p&gt;
&lt;img alt="" src="egit-pull-error-really.png" style="width: 90%;" /&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Hevi</dc:creator><pubDate>Mon, 22 Apr 2013 00:00:00 +0200</pubDate><guid>tag:,2013-04-22:pulling-with-egit.html</guid><category>git</category></item><item><title>Creating static blog generator</title><link>/creating-static-blog-generator.html</link><description>&lt;div class="section" id="docutils"&gt;
&lt;h2&gt;Docutils&lt;/h2&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p class="first"&gt;Create a parser:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
parser = docutils.parsers.rst.Parser()
&lt;/pre&gt;
&lt;p&gt;Several optional arguments may be passed to modify the parser's behavior.
Please see Customizing the Parser below for details.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Gather input (a multi-line string), by reading a file or the standard
input:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
input = sys.stdin.read()
&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Create a new empty &lt;cite&gt;docutils.nodes.document&lt;/cite&gt; tree:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
document = docutils.utils.new_document(source, settings)
&lt;/pre&gt;
&lt;p&gt;See &lt;cite&gt;docutils.utils.new_document()&lt;/cite&gt; for parameter details.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Run the parser, populating the document tree:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
parser.parse(input, document)
&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a class="reference external" href="http://kaizer.se/wiki/rst_customize.py"&gt;http://kaizer.se/wiki/rst_customize.py&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://docutils.sourceforge.net/docs/dev/hacking.html"&gt;http://docutils.sourceforge.net/docs/dev/hacking.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Related&lt;/p&gt;
&lt;p&gt;pelican &lt;a class="reference external" href="https://github.com/getpelican/pelican/"&gt;https://github.com/getpelican/pelican/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.voidspace.org.uk/python/firedrop2/"&gt;http://www.voidspace.org.uk/python/firedrop2/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://pyblosxom.github.com/"&gt;http://pyblosxom.github.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;mynt &lt;a class="reference external" href="https://github.com/Anomareh/mynt"&gt;https://github.com/Anomareh/mynt&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;wok&lt;/p&gt;
&lt;p&gt;frozen flask&lt;/p&gt;
&lt;p&gt;hyde &lt;a class="reference external" href="https://github.com/lakshmivyas/hyde"&gt;https://github.com/lakshmivyas/hyde&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;tinkerer&lt;/p&gt;
&lt;p&gt;nikola &lt;a class="reference external" href="https://github.com/ralsina/nikola"&gt;https://github.com/ralsina/nikola&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;chisel &lt;a class="reference external" href="https://github.com/dz/chisel"&gt;https://github.com/dz/chisel&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;growl &lt;a class="reference external" href="https://github.com/xfire/growl/tree"&gt;https://github.com/xfire/growl/tree&lt;/a&gt;&lt;/p&gt;
&lt;pre class="code python literal-block"&gt;
&lt;span class="nd"&gt;&amp;#64;memcache_decorator&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'rst_parser'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;_parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;initial_header_level&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;transform_doctitle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;story&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;parts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;publish_parts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;story&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;writer_name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'html'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;settings_overrides&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="s"&gt;'initial_header_level'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;initial_header_level&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s"&gt;'doctitle_xform'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;transform_doctitle&lt;/span&gt;
            &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;parts&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'body'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Hevi</dc:creator><pubDate>Thu, 21 Mar 2013 00:00:00 +0100</pubDate><guid>tag:,2013-03-21:creating-static-blog-generator.html</guid><category>blog</category></item><item><title>Making remote git repository</title><link>/making-remote-git-repository.html</link><description>&lt;p&gt;To the remote server:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
local&amp;gt; ssh remote.net
&amp;gt; cd /home/user/git
&amp;gt; mkdir project.git
&amp;gt; cd project.git
&amp;gt; git --bare init
&amp;gt; git config core.sharedrepository 1
&amp;gt; git config receive.denyNonFastforwards true
&lt;/pre&gt;
&lt;p&gt;On local workstation:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
&amp;gt; cd project
&amp;gt; git remote add origin ssh://user&amp;#64;remote.net/home/user/git/project.git
&amp;gt; git push -u origin master
&lt;/pre&gt;
&lt;p&gt;Links:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://qugstart.com/blog/ruby-and-rails/create-a-new-git-remote-repository-from-some-local-files-or-local-git-repository/"&gt;http://qugstart.com/blog/ruby-and-rails/create-a-new-git-remote-repository-from-some-local-files-or-local-git-repository/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Hevi</dc:creator><pubDate>Wed, 20 Mar 2013 00:00:00 +0100</pubDate><guid>tag:,2013-03-20:making-remote-git-repository.html</guid><category>git</category></item><item><title>EGit and Git Usage</title><link>/egit-and-git-usage.html</link><description>&lt;p&gt;Setup&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;GH github&lt;/li&gt;
&lt;li&gt;WS workstation&lt;/li&gt;
&lt;li&gt;SR server&lt;/li&gt;
&lt;li&gt;LT laptop&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;div class="section" id="importing-a-project-from-gh-github-to-ws-eclipse"&gt;
&lt;h2&gt;Importing a project from GH github to WS eclipse&lt;/h2&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Hevi</dc:creator><pubDate>Mon, 11 Mar 2013 00:00:00 +0100</pubDate><guid>tag:,2013-03-11:egit-and-git-usage.html</guid><category>git</category></item></channel></rss>