<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Notes</title><link href="URL_PREFIX/" rel="alternate"></link><link href="URL_PREFIX/feeds/all.atom.xml" rel="self"></link><id>URL_PREFIX/</id><updated>2014-10-31T00:00:00+01:00</updated><entry><title>Pelican usage notes</title><link href="URL_PREFIX/pelican-usage-notes.html" rel="alternate"></link><updated>2014-10-31T00:00:00+01:00</updated><author><name>Hevi</name></author><id>tag:,2014-10-31:URL_PREFIX/pelican-usage-notes.html</id><summary type="html">&lt;div class="section" id="install-software"&gt;
&lt;h2&gt;Install software&lt;/h2&gt;
&lt;p&gt;Install packages:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
&amp;gt; pip3 install pelican markdown ghp-import watchdog
&lt;/pre&gt;
&lt;p&gt;&lt;a class="reference external" href="http://blog.getpelican.com/"&gt;http://blog.getpelican.com/&lt;/a&gt; pelican&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://pythonhosted.org/Markdown/"&gt;https://pythonhosted.org/Markdown/&lt;/a&gt; markdown&lt;/p&gt;
&lt;p&gt;ghp-import is a python script that imports a given directory tree into local
current git repository as gh-pages branch, which can later pushed into
github.&lt;/p&gt;
&lt;p&gt;watchdog&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="setup-blog-directory"&gt;
&lt;h2&gt;Setup blog directory&lt;/h2&gt;
&lt;p&gt;Make a directory or use existing one. ~/wrk/blog is used here and CWD there is
assumed on later examples.&lt;/p&gt;
&lt;p&gt;Initialize files:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
&amp;gt; cd ~/wrk/blog
&amp;gt; mv .project .project-no
&amp;gt; pelican-quickstart
&amp;gt; mv .project-no .project
&lt;/pre&gt;
&lt;p&gt;Move eclipse project file away (if any), pelican-quickstart confuses with it.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="run-notes"&gt;
&lt;h2&gt;Run notes&lt;/h2&gt;
&lt;p&gt;First terminal:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
&amp;gt; make serve
&lt;/pre&gt;
&lt;p&gt;and open browser to &lt;a class="reference external" href="http://localhost:8000"&gt;http://localhost:8000&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Second terminal:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
&amp;gt; pelican -r
&lt;/pre&gt;
&lt;p&gt;This run until there rst syntax error, then restart pelican -r again.&lt;/p&gt;
&lt;p&gt;OR&lt;/p&gt;
&lt;p&gt;Use file modify watch program to run pelican again, Makefile fragment:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
rerun:
  watchmedo shell-command  -i &amp;quot;*output/*;*cache/*&amp;quot;  -W -R -c &amp;quot;make html&amp;quot; .
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="beam-up-to-github-user-pages"&gt;
&lt;h2&gt;Beam up to github user pages&lt;/h2&gt;
&lt;p&gt;Makefile fragment (full &lt;a class="reference external" href="https://github.com/hevi9/blog/blob/master/Makefile"&gt;https://github.com/hevi9/blog/blob/master/Makefile&lt;/a&gt;):&lt;/p&gt;
&lt;pre class="literal-block"&gt;
github: publish
  ghp-import -n $(OUTPUTDIR)
  git push -f git&amp;#64;github.com:$(GHP_USER)/$(GHP_USER).github.io.git gh-pages:master
&lt;/pre&gt;
&lt;p&gt;Import output directory into local git repo as gh-pages branch and the push
gh-pages into remote github user pages repo as master branch. Note: this uses
-f force overwrite on push so existing remote files are destroyed which is ok
on this case.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://docs.getpelican.com/en/3.4.0/tips.html"&gt;http://docs.getpelican.com/en/3.4.0/tips.html&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</summary><category term="setup"></category><category term="blog"></category><category term="python"></category></entry><entry><title>Pulling with Egit</title><link href="URL_PREFIX/pulling-with-egit.html" rel="alternate"></link><updated>2013-04-22T00:00:00+02:00</updated><author><name>Hevi</name></author><id>tag:,2013-04-22:URL_PREFIX/pulling-with-egit.html</id><summary type="html">&lt;p&gt;Pulling from remote repository with Egit does not
always work right.&lt;/p&gt;
&lt;p&gt;&amp;lt;project&amp;gt; -&amp;gt; Team -&amp;gt; Pull might give this:&lt;/p&gt;
&lt;img alt="" src="URL_PREFIX/images/egit-pull-error.png" /&gt;
&lt;p&gt;which is incorrect information.&lt;/p&gt;
&lt;p&gt;Workaround is to revert command line git (as usual):&lt;/p&gt;
&lt;img alt="" src="URL_PREFIX/images/egit-pull-error-really.png" style="width: 80%;" /&gt;
</summary><category term="git"></category></entry><entry><title>Making remote git repository</title><link href="URL_PREFIX/making-remote-git-repository.html" rel="alternate"></link><updated>2013-03-20T00:00:00+01:00</updated><author><name>Hevi</name></author><id>tag:,2013-03-20:URL_PREFIX/making-remote-git-repository.html</id><summary type="html">&lt;p&gt;To the remote server:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
local&amp;gt; ssh remote.net
&amp;gt; cd /home/user/git
&amp;gt; mkdir project.git
&amp;gt; cd project.git
&amp;gt; git --bare init
&amp;gt; git config core.sharedrepository 1
&amp;gt; git config receive.denyNonFastforwards true
&lt;/pre&gt;
&lt;p&gt;On local workstation:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
&amp;gt; cd project
&amp;gt; git remote add origin ssh://user&amp;#64;remote.net/home/user/git/project.git
&amp;gt; git push -u origin master
&lt;/pre&gt;
&lt;p&gt;Links:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://qugstart.com/blog/ruby-and-rails/create-a-new-git-remote-repository-from-some-local-files-or-local-git-repository/"&gt;http://qugstart.com/blog/ruby-and-rails/create-a-new-git-remote-repository-from-some-local-files-or-local-git-repository/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="git"></category></entry><entry><title>Python psutil usage</title><link href="URL_PREFIX/python-psutil-usage.html" rel="alternate"></link><updated>1111-11-11T00:00:00+00:09</updated><author><name>Hevi</name></author><id>tag:,1111-11-11:URL_PREFIX/python-psutil-usage.html</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="https://pythonhosted.org/psutil/"&gt;https://pythonhosted.org/psutil/&lt;/a&gt;&lt;/p&gt;
</summary><category term="python"></category><category term="process"></category><category term="draft"></category></entry></feed>